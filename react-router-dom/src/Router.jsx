import React from "react";
/*
mpa(multiple page application)
-여러개의 페이지로 구성되어 있는 app
-새로운 페이지를 요청(링크를 클릭했을 경우) 할때마다 html, css, jsx, 멀티미디어 등
랜더링에 필요한 요소들을 모두 다운로드 하는 방식

현재 페지이를 새로고침해도 새로 랜더링을 단점이 있다.

장점 : 
-seo검색엔진에서 유리한 위치를 가진다
-최초 로딩이 짧아

단점 : 
-페이지를 요청할때마다 리로딩(새로고침) - 새로운 페이지 랜더링이 새로 되는 방식
-모바일 앱 개발시 백엔드 작업을 별도로 해야 함
-로딩 관련해서 성능저하나 메모리 부하가 생길 수 있다.

spa(single page application)
-하나의 페이지로만 구성된 app (react, vue, angular)로 생성한 app을 spa라고 한다.
-spa는 랜더링에 필요한 html,css,js들을 최초 요청시에 모든 요소들을 한번에 다 다운받는다.
초기 로딩이 조금 느리다는 단점이 생기지만 이후로는 서버 요청에 따라 필요한 데이터만 전달
받아서 페이지를 랜더링 하는 방식

장점 : 
-필요한 부분만 랜더링 하기 때문에 성능적으로 mpa보다 우위를 가져올 수 있다.
-페이지별로 작업하는 것이 아닌 컴포넌트 별로 작업하기 때문에 유지보수나 생산성이 높다.
-모바일 앱 관련해서 별도의 백엔드 작업을 필요로 하지 않는다.

단점 : 
-초기 로딩이 느림
-seo가 상대적으로 불리함(next.js로 해결)

react에서는 내부 페이지 변경시에 a태그로 변경하지 않는다
a태그의 목적은 태그를 클릭했을때 페이지를 이동하는 방식이기 때문에 a태그로 사용할 수 없다.

router-dom이라는 라이브러리로 사용해야 한다.

라이브러리이기 때문에 설치를 필요로 한다.
yarn add react-router-dom

*/

export default function Router() {
  return <div>Router</div>;
}
